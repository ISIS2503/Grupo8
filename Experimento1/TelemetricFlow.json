[
    {
        "id": "6cb79cba.eae8fc",
        "type": "tab",
        "label": "Telemetric Flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e01ae444.e3527",
        "type": "inject",
        "z": "6cb79cba.eae8fc",
        "name": "Microcontrador Time",
        "topic": "rootTime",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "x": 260,
        "y": 120,
        "wires": [
            [
                "3f74a8a7.67c5d8",
                "4a5937fe.93de58"
            ]
        ]
    },
    {
        "id": "4bbab8c.2079ac8",
        "type": "serial in",
        "z": "6cb79cba.eae8fc",
        "name": "Nodo de escucha",
        "serial": "e17c65f7.8e2e9",
        "x": 240,
        "y": 280,
        "wires": [
            [
                "fa943628.3b4ae",
                "38a0bcb5.af8f04"
            ]
        ]
    },
    {
        "id": "fa943628.3b4ae",
        "type": "debug",
        "z": "6cb79cba.eae8fc",
        "name": "before format",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 480,
        "y": 240,
        "wires": []
    },
    {
        "id": "3f74a8a7.67c5d8",
        "type": "debug",
        "z": "6cb79cba.eae8fc",
        "name": "before format",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 540,
        "y": 60,
        "wires": []
    },
    {
        "id": "38a0bcb5.af8f04",
        "type": "function",
        "z": "6cb79cba.eae8fc",
        "name": "Format VariablesAmbientales",
        "func": "var res = {};\nvar tempString;\nvar tempArray = [];\nvar subArray = [];\nvar i;\nvar ids;\nvar nivelId;\nvar areaId;\nvar microcontradorId;\nvar tipoVariable;\n\ntempString = msg.payload;\ntempArray = tempString.split(\";;;\");\nids=tempArray[0].split(\":::\");\n\nnivelId=ids[0];\nareaId=ids[1]\nmicrocontroladorId = ids[2];\n\nres.topic = \"variablesAmbientales\";\nres.payload = [];\nres.payload[0]={\"nivelId\": nivelId,\n                \"areaId\": areaId,\n                \"microcontroladorId\": microcontroladorId\n                }\n\n\nfor(i = 1; i< (tempArray.length-1); i++)\n{\n    if(tempArray[i] !== \"NULL\")\n    {\n        subArray[i]= tempArray[i].split(\":::\");\n        \n        switch(i)\n        {\n            case 1:\n                tipoVariable = 'Temperatura';\n                break;\n            case 2:\n                tipoVariable = 'Gases(CO)';\n                break;\n            case 3: \n                tipoVariable = 'Iluminacion';\n                break;\n            case 4:\n                tipoVariable = 'Ruido';\n                break;\n        }\n        \n        \n        res.payload[i] = {\"data\": parseInt((subArray[i])[0]),\n                    \"tipo\": tipoVariable,\n                    \"unidad\": (subArray[i])[1]\n                    }\n        \n    }\n}\n\nreturn res;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 360,
        "wires": [
            [
                "4d854a0d.ac6cc4",
                "d1a360bd.07a37"
            ]
        ]
    },
    {
        "id": "4a5937fe.93de58",
        "type": "function",
        "z": "6cb79cba.eae8fc",
        "name": "Format Time",
        "func": "var res = {};\n\nres.payload = new Date(msg.payload);\nres.topic = msg.topic;\n\nreturn res;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 160,
        "wires": [
            [
                "1c7df554.76becb",
                "d1a360bd.07a37"
            ]
        ]
    },
    {
        "id": "4d854a0d.ac6cc4",
        "type": "debug",
        "z": "6cb79cba.eae8fc",
        "name": "after format",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 790,
        "y": 400,
        "wires": []
    },
    {
        "id": "1c7df554.76becb",
        "type": "debug",
        "z": "6cb79cba.eae8fc",
        "name": "after format",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 749,
        "y": 127,
        "wires": []
    },
    {
        "id": "d1a360bd.07a37",
        "type": "function",
        "z": "6cb79cba.eae8fc",
        "name": "Merge 2 Messages",
        "func": "context.data = context.data || {};\n\nswitch (msg.topic) {\n    case \"rootTime\":\n        context.data.sensetime = msg.payload;\n        msg = null;\n        break;\n    case \"variablesAmbientales\":\n        context.data.variablesAmbientales = msg.payload;\n        msg = null;\n        break;\n        \n    default:\n        msg = null;\n    \tbreak;\n}\n\nif(context.data.sensetime && context.data.variablesAmbientales) {\n\tres = {};\n    res.payload = JSON.stringify(context.data);\n    res.topic = \"variablesAmbientales\";\n    context.data = null;\n\treturn res;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 816,
        "y": 195,
        "wires": [
            [
                "2e432098.b6a658",
                "c0610781.0521c8"
            ]
        ]
    },
    {
        "id": "2e432098.b6a658",
        "type": "udp out",
        "z": "6cb79cba.eae8fc",
        "name": "Send VariablesAmbientales",
        "addr": "localhost",
        "iface": "",
        "port": "6000",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 1080,
        "y": 140,
        "wires": []
    },
    {
        "id": "c0610781.0521c8",
        "type": "debug",
        "z": "6cb79cba.eae8fc",
        "name": "after merge",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1030,
        "y": 220,
        "wires": []
    },
    {
        "id": "e17c65f7.8e2e9",
        "type": "serial-port",
        "z": "",
        "serialport": "COM5",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": true
    }
]